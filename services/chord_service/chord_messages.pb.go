// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/chord_service/chord_messages.proto

package chord_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{0}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Node struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type Nodes struct {
	NodeArray            []*Node  `protobuf:"bytes,1,rep,name=nodeArray,proto3" json:"nodeArray,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodes) Reset()         { *m = Nodes{} }
func (m *Nodes) String() string { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()    {}
func (*Nodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{2}
}

func (m *Nodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodes.Unmarshal(m, b)
}
func (m *Nodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodes.Marshal(b, m, deterministic)
}
func (m *Nodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodes.Merge(m, src)
}
func (m *Nodes) XXX_Size() int {
	return xxx_messageInfo_Nodes.Size(m)
}
func (m *Nodes) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodes.DiscardUnknown(m)
}

var xxx_messageInfo_Nodes proto.InternalMessageInfo

func (m *Nodes) GetNodeArray() []*Node {
	if m != nil {
		return m.NodeArray
	}
	return nil
}

type Key struct {
	Keyword              string   `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{3}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type FileRecord struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	OwnerIp              string   `protobuf:"bytes,2,opt,name=owner_ip,json=ownerIp,proto3" json:"owner_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileRecord) Reset()         { *m = FileRecord{} }
func (m *FileRecord) String() string { return proto.CompactTextString(m) }
func (*FileRecord) ProtoMessage()    {}
func (*FileRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{4}
}

func (m *FileRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRecord.Unmarshal(m, b)
}
func (m *FileRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRecord.Marshal(b, m, deterministic)
}
func (m *FileRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRecord.Merge(m, src)
}
func (m *FileRecord) XXX_Size() int {
	return xxx_messageInfo_FileRecord.Size(m)
}
func (m *FileRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRecord.DiscardUnknown(m)
}

var xxx_messageInfo_FileRecord proto.InternalMessageInfo

func (m *FileRecord) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileRecord) GetOwnerIp() string {
	if m != nil {
		return m.OwnerIp
	}
	return ""
}

type FileRecords struct {
	FileRecords          []*FileRecord `protobuf:"bytes,1,rep,name=fileRecords,proto3" json:"fileRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FileRecords) Reset()         { *m = FileRecords{} }
func (m *FileRecords) String() string { return proto.CompactTextString(m) }
func (*FileRecords) ProtoMessage()    {}
func (*FileRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{5}
}

func (m *FileRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRecords.Unmarshal(m, b)
}
func (m *FileRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRecords.Marshal(b, m, deterministic)
}
func (m *FileRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRecords.Merge(m, src)
}
func (m *FileRecords) XXX_Size() int {
	return xxx_messageInfo_FileRecords.Size(m)
}
func (m *FileRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRecords.DiscardUnknown(m)
}

var xxx_messageInfo_FileRecords proto.InternalMessageInfo

func (m *FileRecords) GetFileRecords() []*FileRecord {
	if m != nil {
		return m.FileRecords
	}
	return nil
}

type FileRecordWithKeyword struct {
	Keyword              string      `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Val                  *FileRecord `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FileRecordWithKeyword) Reset()         { *m = FileRecordWithKeyword{} }
func (m *FileRecordWithKeyword) String() string { return proto.CompactTextString(m) }
func (*FileRecordWithKeyword) ProtoMessage()    {}
func (*FileRecordWithKeyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{6}
}

func (m *FileRecordWithKeyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileRecordWithKeyword.Unmarshal(m, b)
}
func (m *FileRecordWithKeyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileRecordWithKeyword.Marshal(b, m, deterministic)
}
func (m *FileRecordWithKeyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileRecordWithKeyword.Merge(m, src)
}
func (m *FileRecordWithKeyword) XXX_Size() int {
	return xxx_messageInfo_FileRecordWithKeyword.Size(m)
}
func (m *FileRecordWithKeyword) XXX_DiscardUnknown() {
	xxx_messageInfo_FileRecordWithKeyword.DiscardUnknown(m)
}

var xxx_messageInfo_FileRecordWithKeyword proto.InternalMessageInfo

func (m *FileRecordWithKeyword) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *FileRecordWithKeyword) GetVal() *FileRecord {
	if m != nil {
		return m.Val
	}
	return nil
}

type TransferKeysRequest struct {
	FromId               string   `protobuf:"bytes,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToNode               *Node    `protobuf:"bytes,2,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferKeysRequest) Reset()         { *m = TransferKeysRequest{} }
func (m *TransferKeysRequest) String() string { return proto.CompactTextString(m) }
func (*TransferKeysRequest) ProtoMessage()    {}
func (*TransferKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec7364b073ade720, []int{7}
}

func (m *TransferKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferKeysRequest.Unmarshal(m, b)
}
func (m *TransferKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferKeysRequest.Marshal(b, m, deterministic)
}
func (m *TransferKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferKeysRequest.Merge(m, src)
}
func (m *TransferKeysRequest) XXX_Size() int {
	return xxx_messageInfo_TransferKeysRequest.Size(m)
}
func (m *TransferKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransferKeysRequest proto.InternalMessageInfo

func (m *TransferKeysRequest) GetFromId() string {
	if m != nil {
		return m.FromId
	}
	return ""
}

func (m *TransferKeysRequest) GetToNode() *Node {
	if m != nil {
		return m.ToNode
	}
	return nil
}

func init() {
	proto.RegisterType((*ID)(nil), "chord.ID")
	proto.RegisterType((*Node)(nil), "chord.Node")
	proto.RegisterType((*Nodes)(nil), "chord.Nodes")
	proto.RegisterType((*Key)(nil), "chord.Key")
	proto.RegisterType((*FileRecord)(nil), "chord.FileRecord")
	proto.RegisterType((*FileRecords)(nil), "chord.FileRecords")
	proto.RegisterType((*FileRecordWithKeyword)(nil), "chord.FileRecordWithKeyword")
	proto.RegisterType((*TransferKeysRequest)(nil), "chord.TransferKeysRequest")
}

func init() {
	proto.RegisterFile("services/chord_service/chord_messages.proto", fileDescriptor_ec7364b073ade720)
}

var fileDescriptor_ec7364b073ade720 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4b, 0xf3, 0x40,
	0x10, 0xc5, 0x69, 0xfa, 0xb5, 0x69, 0x27, 0xf0, 0x81, 0xab, 0x62, 0xf4, 0x62, 0x59, 0x45, 0x2a,
	0x42, 0x02, 0xad, 0x07, 0x0f, 0x22, 0xd8, 0x8a, 0x50, 0x0a, 0x22, 0xb1, 0x28, 0x78, 0x09, 0x69,
	0x76, 0xd2, 0xae, 0x26, 0xd9, 0xb8, 0x9b, 0xb6, 0xe4, 0xbf, 0x97, 0xc4, 0xb4, 0x51, 0xa9, 0xa7,
	0xe5, 0x37, 0xf3, 0x78, 0xfb, 0x78, 0x0c, 0x5c, 0x28, 0x94, 0x4b, 0xee, 0xa3, 0xb2, 0xfd, 0xb9,
	0x90, 0xcc, 0x2d, 0xb1, 0xa4, 0x08, 0x95, 0xf2, 0x66, 0xa8, 0xac, 0x44, 0x8a, 0x54, 0x90, 0x46,
	0x31, 0xa5, 0x7b, 0xa0, 0x8d, 0xee, 0xc8, 0x7f, 0xd0, 0x38, 0x33, 0x6b, 0x9d, 0x5a, 0xb7, 0xed,
	0x68, 0x9c, 0xd1, 0x33, 0xf8, 0xf7, 0x20, 0x18, 0xfe, 0x9e, 0x17, 0x9c, 0x98, 0x5a, 0xc9, 0x09,
	0xed, 0x41, 0x23, 0xd7, 0x29, 0x72, 0x0e, 0xed, 0x58, 0x30, 0xbc, 0x95, 0xd2, 0xcb, 0xcc, 0x5a,
	0xa7, 0xde, 0x35, 0x7a, 0x86, 0x55, 0xfc, 0x60, 0xe5, 0x02, 0xa7, 0xda, 0xd2, 0x63, 0xa8, 0x8f,
	0x31, 0x23, 0x26, 0xe8, 0xef, 0x98, 0xad, 0x84, 0x5c, 0xfb, 0xaf, 0x91, 0x0e, 0x01, 0xee, 0x79,
	0x88, 0x0e, 0xfa, 0x42, 0x32, 0x72, 0x04, 0xad, 0x80, 0x87, 0x18, 0x7b, 0x11, 0x96, 0xc2, 0x0d,
	0x93, 0x43, 0x68, 0x89, 0x55, 0x8c, 0xd2, 0xdd, 0x84, 0xd2, 0x0b, 0x1e, 0x25, 0x74, 0x00, 0x46,
	0x65, 0xa2, 0x48, 0x1f, 0x8c, 0xa0, 0xc2, 0x32, 0xe1, 0x4e, 0x99, 0xb0, 0x12, 0x3a, 0xdf, 0x55,
	0xf4, 0x19, 0xf6, 0xab, 0xd5, 0x0b, 0x4f, 0xe7, 0xe3, 0xaf, 0x84, 0x7f, 0x67, 0x27, 0x27, 0x50,
	0x5f, 0x7a, 0x61, 0x11, 0x66, 0xab, 0x7f, 0xbe, 0xa5, 0x13, 0xd8, 0x9d, 0x48, 0x2f, 0x56, 0x01,
	0xca, 0x31, 0x66, 0xca, 0xc1, 0x8f, 0x05, 0xaa, 0x94, 0x1c, 0x80, 0x1e, 0x48, 0x11, 0xb9, 0x9b,
	0xc6, 0x9b, 0x39, 0x8e, 0x18, 0x39, 0x05, 0x3d, 0x15, 0x6e, 0xde, 0x60, 0x69, 0xfc, 0xa3, 0xda,
	0x66, 0x2a, 0xf2, 0x77, 0x70, 0xf3, 0x7a, 0x3d, 0xe3, 0xe9, 0x7c, 0x31, 0xb5, 0x7c, 0x11, 0xd9,
	0x4c, 0x28, 0x4f, 0x2e, 0x98, 0x17, 0x73, 0x0c, 0xed, 0xe1, 0xd3, 0x65, 0xff, 0xca, 0x7d, 0x94,
	0xe2, 0x0d, 0xfd, 0xd4, 0xde, 0x7e, 0x25, 0xd3, 0x66, 0x71, 0x17, 0xfd, 0xcf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x92, 0x6c, 0x0d, 0x63, 0x46, 0x02, 0x00, 0x00,
}
